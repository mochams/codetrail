name: Release It

on: [workflow_call]

env:
  PYPI_API_TOKEN: "${{ secrets.PYPI_API_TOKEN }}"

jobs:
  pypi-publish:
    name: Publish release to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/psqache
    permissions:
      id-token: write

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true

      - name: Update version in pyproject.toml from GitHub Release Tag
        env:
          RELEASE_TAG: ${{ github.ref_name }}
        run: |
          VERSION=${RELEASE_TAG#v}  # Remove leading "v" if present
          sed -i "s/^version = \".*\"/version = \"$VERSION\"/" pyproject.toml

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root
          poetry config pypi-token.pypi ${{ env.PYPI_API_TOKEN }}

      - name: Build package
        run: |
          poetry build

      - name: Publish package distributions to PyPI
        run: |
          poetry publish
